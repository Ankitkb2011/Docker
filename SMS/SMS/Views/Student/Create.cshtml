@model SMS.Student

@{
    ViewBag.Title = "Create";
}

<style>
    .personalstd {
        overflow: visible;
    }

    fieldset {
        padding-top: 5px;
    }
</style>



<div class="form-horizontal">
    @using (Html.BeginForm("Create", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()
        <fieldset class="col-md-12">
            <legend>Student Personal Details</legend>
            <div class="card mx-xl-12 personalstd">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.EnrollmentID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.EnrollmentID, new { htmlAttributes = new { @class = "form-control",  @maxlength = "10"} })
                            @Html.ValidationMessageFor(model => model.EnrollmentID, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })


                            <br />




                        </div>

                        <div class="col-md-4">

                            @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.DOA, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DOA, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.DOA, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4" style="text-align:center">
                            <input type="image" id="imagePreview" class="img-thumbnail" alt="profile pic" src="~/images/default-avatar.png" style="width:150px;height:175px;" />
                            <div class="form-group" style="text-align:center">
                                <label>Profile Image</label>
                                <input type="file" name="postedFile" style="display:none;" />

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FatherMobNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FatherMobNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.FatherMobNo, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.StudentAddress, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.StudentAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = "150" } })
                            @Html.ValidationMessageFor(model => model.StudentAddress, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.MotherMobNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MotherMobNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.MotherMobNo, "", new { @class = "text-danger" })

                            <br />

                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })

                            <div class="col-md-12">
                                <label class="radio-inline">
                                    <input id="Gender" name="Gender" type="radio" value="Male">Male
                                </label>
                                <label class="radio-inline">
                                    <input id="Gender" name="Gender" type="radio" value="Female">Female                                
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.AlterNateNo, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.AlterNateNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.AlterNateNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </fieldset>

        <hr />

        <fieldset class="col-md-12" style="margin-top:10px;">
            <legend>Office Details</legend>
            <div class="card mx-xl-12 personalstd">
                <div class="card-body">
                    @Html.LabelFor(model => model.SchoolID, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("SchoolID", null, "Select Study Centre", htmlAttributes: new { @class = "form-control", @id = "ddlSchool" })
                    @Html.ValidationMessageFor(model => model.SchoolID, "", new { @class = "text-danger" })

                    <br />

                    @Html.LabelFor(model => model.CourseID, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("CourseID", new SelectList(string.Empty, "Value", "Text"), "Select Course", htmlAttributes: new { @class = "form-control", @id = "ddlCourse" })
                    @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })

                    <br />

                    @Html.LabelFor(model => model.SectionID, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("SectionID", new SelectList(string.Empty, "Value", "Text"), "Select Section", htmlAttributes: new { @class = "form-control", @id = "ddlSection" })
                    @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })

                    <div class="text-center py-4 mt-3">
                        <input type="submit" value="Save" class="btn btn-primary" style="width:98px;" />
                        <a href="@Url.Action("Index")" class="btn btn-danger">
                            Close
                        </a>
                    </div>
                </div>
            </div>
        </fieldset>
    }
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#ddlSchool').change(function () {
            $.post("/Student/GetCourses", { SchoolID: $('#ddlSchool').val() }, function (data) {
                $('#ddlCourse').empty();
                $('#ddlCourse').append("<option value>Select Course</option>")
                $.each(data, function (index, row) {
                    $('#ddlCourse').append("<option value ='" + row.CourseID + "'>" + row.CourseName + "</option>")
                });
            });
        });

        $('#ddlCourse').change(function () {
            $.post("/Student/GetSection", { CourseID: $('#ddlCourse').val() }, function (data) {
                $('#ddlSection').empty();
                $('#ddlSection').append("<option value>Select Section</option>")
                $.each(data, function (index, row) {
                    $('#ddlSection').append("<option value ='" + row.SectionID + "'>" + row.SectionName + "</option>")
                });
            });
        });

        $(function () {
            $(".datetimecal").datetimepicker({
                format: "DD/MM/YYYY"

            });
        });

        $(function () {
            //var fileupload = $("#ProfileFileUpload");
            // var filePath = $("#spnFilePath");
            var fileupload = $('[name="postedFile"]');
            '[name="ElementNameHere"]'
            var image = $("#imagePreview");
            image.click(function () {
                event.preventDefault();
                fileupload.click();
                fileupload.change();
            });
            fileupload.change(function (event) {
                var tmppath = fileupload.val();
                if (tmppath.length > 0) {
                    var url = URL.createObjectURL(event.target.files[0]);
                    $('#imagePreview').prop('src', url);
                    //alert(tmppath);
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


